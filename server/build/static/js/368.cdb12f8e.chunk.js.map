{"version":3,"file":"static/js/368.cdb12f8e.chunk.js","mappings":"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","sources":["components/main-page/media/randList.ts","components/media-list/photoList.tsx","svg/leftLine.tsx","svg/rightChevron.tsx","components/media-list/wraperList.tsx"],"sourcesContent":["import { DeviceType } from \"../../../types/types-main\"\n\nexport const randList = <T>(arr: T[], device:DeviceType):Array<T[]> => {\n    if (arr.length === 1) return [[...arr]]\n    if (device !== 'pc') return arr.map(e => [e])\n\n    let tempArr: Array<T[]> = []\n\n    for (let i = 0; i < arr.length; i = i + 3) {\n        tempArr.push([\n            ...arr.slice(i, i + 3 >= arr.length ? arr.length : i + 3),\n        ])\n    }\n\n    if (tempArr[tempArr.length - 1].length === 1) {\n        tempArr[tempArr.length - 1].unshift(tempArr[tempArr.length - 2].pop() as T)\n    }\n\n    return tempArr\n}\n","import { ReactElement } from \"react\";\nimport { WraperList } from \"./wraperList\";\n\nconst arr = [\n    { src: \"string\", photoId: \"1\" },\n    { src: \"string\", photoId: \"2\" },\n    { src: \"string\", photoId: \"3\" },\n    { src: \"string\", photoId: \"4\" },\n]\n\nexport const PhotoList = ():ReactElement => {\n    return <WraperList arr={arr} />\n}\n\n\n\nexport default PhotoList","export const LeftLine = () => {\n    return <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M7 12L2 6.5L7 1\" stroke=\"#141414\" stroke-width=\"2.2\" />\n        <path d=\"M12.5 6.5L3 6.5\" stroke=\"#141414\" stroke-width=\"2.2\" />\n    </svg>\n\n}","export const RightChevron = () => {\n    return <svg width=\"5\" height=\"9\" viewBox=\"0 0 5 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1 1L4 4.5L0.999999 8\" stroke=\"#141414\" stroke-width=\"1.5\"/>\n    </svg>\n\n}","import { ReactElement } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { LeftLine } from \"../../svg/leftLine\";\nimport { randList } from \"../main-page/media/randList\";\nimport { useLocation } from 'react-router-dom';\nimport { RightChevron } from \"../../svg/rightChevron\";\nimport { Outlet } from \"react-router-dom\";\nimport { useContext } from \"react\"\nimport { AppContext } from \"../../context/context\"\n\nconst title = (key: string): { title: string, buttonTitle: ReactElement | string } => {\n    switch (key) {\n        case \"photo-list\":\n            return { title: \"photo\", buttonTitle: <>open full <br /> size</> }\n        case \"video-list\":\n            return { title: \"video\", buttonTitle: \"play\" }\n        default:\n            return { title: 'not found', buttonTitle: 'not found' }\n\n    }\n}\n\nexport const WraperList = <T extends { src: string },>({\n    arr,\n}: {\n    arr: T[];\n}) => {\n\n    let { setId } = useParams();\n    const navigate = useNavigate()\n    const location = useLocation();\n    const path = title(location.pathname.split('/')[1]);\n    const { device } = useContext(AppContext)\n\n    const exit = () => {\n        navigate(-1)\n    }\n\n    const toSlick = (\n        photoId: string | number\n    ) => {\n        console.log(\"`/${location.pathname.split('/')[1]}/${setId}/${path.title}/1` -->\", `/${location.pathname.split('/')[1]}/${setId}/${path.title}/1`);\n\n        navigate(`/${location.pathname.split('/')[1]}/${setId}/${path.title}/1`)\n    }\n\n    return <div className=\"media__list content\">\n        <Outlet />\n        <div className=\"media\">\n            <h4 className=\"title__links\" onClick={exit}>\n                <div><LeftLine /></div>\n                back to {path.title}\n            </h4>\n            <div className=\"media__list-subtitle\">\n                <h5>{path.title}</h5>\n                <RightChevron />\n                <h5>{setId}</h5>\n            </div>\n            <div className=\"media__list\">\n                {randList(arr, device).map((arrItem: T[], index: number) => (\n                    <div\n                        className={`media__itemline-${arrItem.length}-${index % 2 === 0 ? \"p\" : \"n\"\n                            } media__itemline`}\n                    >\n                        {arrItem.map((item, id) => (\n                            <div style={{ backgroundImage: item.src }} className=\"media__item\" >\n                                <div className=\"media__item-bg\" onClick={() => toSlick(\"someid--->\" + id)}>\n                                    <button className=\"media__item-bg_but\"> {path.buttonTitle}</button>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n\n    </div >\n}\n\nexport default WraperList"],"names":["randList","arr","device","length","_toConsumableArray","map","e","tempArr","i","push","slice","unshift","pop","src","photoId","PhotoList","_jsx","WraperList","LeftLine","_jsxs","width","height","viewBox","fill","xmlns","children","d","stroke","RightChevron","_ref","setId","useParams","navigate","useNavigate","location","useLocation","path","key","title","buttonTitle","_Fragment","pathname","split","useContext","AppContext","className","Outlet","onClick","arrItem","index","concat","item","id","style","backgroundImage","console","log"],"sourceRoot":""}