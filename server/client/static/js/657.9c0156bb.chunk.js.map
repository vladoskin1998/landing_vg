{"version":3,"file":"static/js/657.9c0156bb.chunk.js","mappings":"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","sources":["svg/prevSlick.tsx","svg/nextSlick.tsx","components/slick-media/wraperSlick.tsx","components/slick-media/slickMedia.tsx","utils/componentParams.ts"],"sourcesContent":["export const PrevSlick = () => {\n    return <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"25\" cy=\"25\" r=\"24.5\" transform=\"rotate(-90 25 25)\" stroke=\"#999999\" />\n        <path d=\"M28 35L20 25L28 15\" stroke=\"#999999\" />\n    </svg>\n}","export const NextSlick = () => {\n    return <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"25\" cy=\"25\" r=\"24.5\" transform=\"rotate(90 25 25)\" stroke=\"#999999\" />\n        <path d=\"M22 15L30 25L22 35\" stroke=\"#999999\" />\n    </svg>\n\n}","import { CloseSlick } from \"../../svg/closeSlick\";\nimport { PrevSlick } from \"../../svg/prevSlick\";\nimport { NextSlick } from \"../../svg/nextSlick\";\nimport { useNavigate } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { ReactNode } from \"react\";\n\nexport const WraperSlick = ({ refSlick, children,stat }: { stat:string,refSlick: React.RefObject<Slider>, children: ReactNode }) => {\n    const navigate = useNavigate()\n    return <div className=\"slick_cust\">\n        <button className=\"slick_cust__close\" onClick={() => navigate(-1)}>\n            <CloseSlick />\n        </button>\n        <div className=\"slick_cust__num\">{stat}</div>\n        {\n            children\n        }\n        <button className=\"slick_cust__prev\" onClick={() => refSlick?.current?.slickPrev()}>\n            <PrevSlick />\n        </button>\n        <button className=\"slick_cust__next\" onClick={() => refSlick?.current?.slickNext()}>\n            <NextSlick />\n        </button>\n    </div>\n}","import \"slick-carousel/slick/slick.css\";\nimport { useRef, useMemo, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { WraperSlick } from \"./wraperSlick\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useContext } from \"react\"\nimport { AppContext } from \"../../context/context\"\nimport { wraperMediaListSlick } from \"../../utils/componentParams\";\nimport { MediaEnumFile } from \"../../types/types-main\"\nimport { HREF } from \"../../utils/const\";\n\nexport const SlickMedia = () => {\n\n    const [currentSlide, setCurrentSlide] = useState(0);\n    const location = useLocation();\n    const refSlick = useRef<Slider>(null)\n    const { current, setId } = useParams()\n    const mediaTypeUrl = wraperMediaListSlick(location.pathname.split('/')[3]);\n\n    console.log(location.pathname.split('/')[3], setId);\n\n    const { video, image } = useContext(AppContext)\n\n\n    const arr = useMemo(() => (mediaTypeUrl.tag === MediaEnumFile.PHOTO ? image : video)\n        .find(it => setId === it?.folderId)?.src || [], [video, image]);\n\n    console.log(\"arr-SlickMedia--->\", arr);\n\n    var settings = {\n        arrows: false,\n        initialSlide: Number(current) || 0,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        infinite: false,\n        afterChange: (current: number) => {\n            setCurrentSlide(current);\n        },\n    };\n\n    console.log(currentSlide + 1, arr.length);\n\n    return <WraperSlick refSlick={refSlick} stat={`${currentSlide + 1 + '/' + arr.length}`}>\n        <Slider {...settings} ref={refSlick}>\n            {\n                arr.map((item, index) => <div className=\"slick_cust__slide\" key={index + \"slick_cust__slid\"}>\n                    {mediaTypeUrl.tag === MediaEnumFile.VIDEO\n                        ? <video controls={true} className=\"slick_cust__slide-video\">\n                            <source src={`${HREF}uploads/${item}`} type=\"video/mp4\" />\n                        </video>\n                        : <div style={{ backgroundImage: `url(${HREF}uploads/${item})` }} className=\"slick_cust__slide-photo about__born-image\"></div>\n                    }\n                </div>)\n            }\n        </Slider>\n    </WraperSlick>\n\n\n}\n\nexport default SlickMedia","import { MediaEnumFile, MediaTypeFile, FormatMedia } from \"../types/types-main\"\n\nexport const wraperMediaParams = (link: string) => {\n    switch (link) {\n        case \"photo-list\":\n            return { title: \"photo\", tag: MediaEnumFile.PHOTO }\n        case \"video-list\":\n            return { title: \"video\", tag: MediaEnumFile.VIDEO }\n        default:\n            return { title: \"photo\", tag: MediaEnumFile.PHOTO }\n    }\n}\n\nexport const wraperMediaListParams = (\n    key: string\n): { title: string; buttonTitle: string; tag: MediaTypeFile } => {\n    switch (key) {\n        case \"photo-list\":\n            return {\n                title: \"photo\",\n                buttonTitle: \"open full\",\n                tag: MediaEnumFile.PHOTO,\n            }\n        case \"video-list\":\n            return {\n                title: \"video\",\n                buttonTitle: \"play\",\n                tag: MediaEnumFile.VIDEO,\n            }\n        default:\n            return {\n                title: \"not found\",\n                buttonTitle: \"not found\",\n                tag: MediaEnumFile.PHOTO,\n            }\n    }\n}\n\nexport const wraperMediaListSlick = (key: string): { tag: MediaTypeFile } => {\n    switch (key) {\n        case \"photo\":\n            return { tag: MediaEnumFile.PHOTO }\n        case \"video\":\n            return { tag: MediaEnumFile.VIDEO }\n        default:\n            return { tag: MediaEnumFile.PHOTO }\n    }\n}\n\n\nexport const dataUpload = (key: string): { format: FormatMedia, tag: MediaEnumFile.PHOTO | MediaEnumFile.VIDEO } => {\n    switch (key) {\n        case \"folder-photo\":\n            return { format: FormatMedia.PHOTO, tag: MediaEnumFile.PHOTO }\n        case \"folder-video\":\n            return { format: FormatMedia.VIDEO, tag: MediaEnumFile.VIDEO }\n        default:\n            return { format: FormatMedia.PHOTO, tag: MediaEnumFile.PHOTO }\n    }\n}\n"],"names":["PrevSlick","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","cx","cy","r","transform","stroke","d","NextSlick","WraperSlick","_ref","refSlick","stat","navigate","useNavigate","className","onClick","CloseSlick","_refSlick$current","current","slickPrev","_refSlick$current2","slickNext","SlickMedia","_useState","useState","_useState2","_slicedToArray","currentSlide","setCurrentSlide","location","useLocation","useRef","_useParams","useParams","setId","mediaTypeUrl","wraperMediaListSlick","pathname","split","console","log","_useContext","useContext","AppContext","video","image","arr","useMemo","_find","tag","MediaEnumFile","find","it","folderId","src","settings","arrows","initialSlide","Number","speed","slidesToShow","slidesToScroll","infinite","afterChange","length","concat","Slider","_objectSpread","ref","map","item","index","controls","HREF","type","style","backgroundImage","wraperMediaListParams","key","title","buttonTitle","dataUpload","format","FormatMedia"],"sourceRoot":""}